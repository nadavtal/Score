.tournamentBlock{
    background-color: rgba(0, 0, 0, 0.151);
    // height: 6rem;
    padding: .3rem 0;
    border-top: 2px solid white;
    &--image{
        width: 3.8rem;
        height: 3.8rem;
    }

    &--date{
        font-size: .75rem;
        width: 90%;
    }

    &__buttons{
        margin-top: .3rem;

        &--button{
			width: 100%;
			height: 2rem;
            // border: none;
            // border-radius: 25px;
			font-size: .9rem;
			
        }
    }
}

.registered{
    font-weight: bold;
    background-color: rgba(0, 0, 0, 0.3)
}

// .blockWrapper .ng-enter{
//     transition: 1s linear all;
//     transform: translateY(100vh);
// }
// .blockWrapper .ng-enter-active{
//     transform: translateY(0);
// }

.blockWrapper.ng-enter{
	transition: .2s linear all;
	// transform: translateY(100vh);
	
	opacity: 0;
}
.blockWrapper.ng-enter-active{
	// transform: translateY(0);
	opacity: 1;
}

.blockWrapper.ng-enter-stagger {
	/* this will have a 100ms delay between each successive leave animation */
	transition-delay: 0.10s;
  
	/* As of 1.4.4, this must always be set: it signals ngAnimate
	  to not accidentally inherit a delay property from another CSS class */
	transition-duration: 0s;
  
	/* if you are using animations instead of transitions you should configure as follows:
	  animation-delay: 0.1s;
	  animation-duration: 0s; */
  }

.blockWrapper.ng-leave{
	transition: .2s linear all;
	// transform: translateY(0);
	
	opacity: 1;
}
.blockWrapper.ng-leave-active{
	// transform: translateY(100vh);
	opacity: 0;
}

.blockWrapper.ng-leave-stagger {
	/* this will have a 100ms delay between each successive leave animation */
	transition-delay: 0.1;
  
	/* As of 1.4.4, this must always be set: it signals ngAnimate
	  to not accidentally inherit a delay property from another CSS class */
	transition-duration: 0s;
  
	/* if you are using animations instead of transitions you should configure as follows:
	  animation-delay: 0.1s;
	  animation-duration: 0s; */
  }


.meterContainer{
	width: 100%;
	height: 4px;
}


  .progressLineardemoBasicUsage body {
	padding: 20px; }
  
  .progressLineardemoBasicUsage h4 {
	margin: 10px 0; }
  
  .progressLineardemoBasicUsage md-progress-linear {
	padding-top: 10px;
	margin-bottom: 20px; }
  
  .progressLineardemoBasicUsage #loaders > md-switch {
	margin: 0;
	margin-left: 10px;
	margin-top: -10px; }
  
  .progressLineardemoBasicUsage #loaders > h5 {
	margin-top: 0; }
  
  .progressLineardemoBasicUsage #loaders > p {
	margin-right: 20px;
	margin-bottom: 24px; }
  
  .progressLineardemoBasicUsage p.small {
	font-size: 0.8em;
	margin-top: -18px; }
  
  .progressLineardemoBasicUsage hr {
	width: 100%;
	margin-top: 20px;
	border-color: rgba(221, 221, 177, 0.1); }
  
  .progressLineardemoBasicUsage p.small > code {
	font-size: 0.8em; }
  
  .progressLineardemoBasicUsage .visible {
	opacity: 0;
	border: 2px solid white !important; }
  
  .progressLineardemoBasicUsage .container {
	display: block;
	position: relative;
	width: 100%;
	border: 2px solid #aad1f9;
	transition: opacity  0.1s linear;
	border-top: 0px; }
  
  .progressLineardemoBasicUsage .bottom-block {
	display: block;
	position: relative;
	background-color: rgba(255, 235, 169, 0.25);
	height: 85px;
	width: 100%; }
  
  .progressLineardemoBasicUsage .bottom-block > span {
	display: inline-block;
	margin-top: 10px;
	padding: 25px;
	font-size: 0.9em; }